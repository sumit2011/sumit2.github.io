[{"categories":["DSA"],"content":"Navigation system works on the concept of linked list. Note Use the table of contents to navigate to the portion that you are interested in. ","date":"25-12-2022","objectID":"/single_linked_list/:0:0","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"1. Introduction: Single linked list is a linear data structure. It is slightly different from array. It made by the nodes, each nodes consist a data and the address of the next node and each node are linked using pointers. Here data are not stored in the contiguous memory location, nodes are present anywhere in the memory space but every nodes are linked with eachother that’s why we call this linked list. Main benefit of linked list is that we can insert or delete data from any position in the list. ","date":"25-12-2022","objectID":"/single_linked_list/:1:0","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"2. Creation of Node To create a new node in C++, you will need to define a structure or class that represents a node, and then create an instance of that structure or class. Here we will use structure to create or define a node. Here is an example of a node structure in C++ or C: struct Node { int data; struct Node *next; }; struct Node *head = NULL; ","date":"25-12-2022","objectID":"/single_linked_list/:2:0","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"3. Insertion An insertion operation in a single linked list involves adding a new node to the list. For this first you have to create a newnode and then insert this node where you want. There are several ways to insert a node in the list: At the beginning of the list At the end of the list At a specific position of the list ","date":"25-12-2022","objectID":"/single_linked_list/:3:0","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"3.1 Insertion at Begining To insert a new node at the beginning of the list, you need to create a newnode and set it’s next pointer to point to the current head of the list. Then, you can set the head of the list to the newnode. You also have to check whether the first node is present or not in the list or we can say list is empty or not. // insertion at begining void insertAtBeg(int value) { struct Node *newnode; newnode = (struct Node *)malloc(sizeof(struct Node)); newnode-\u003edata = value; if (head == NULL) { newnode-\u003enext = NULL; head = newnode; } else { newnode-\u003enext = head; head = newnode; } printf(\"%d is inserted at beginning.\\n\", value); } ","date":"25-12-2022","objectID":"/single_linked_list/:3:1","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"3.2 Insertion at Last To insert a new node at the end of the list, you need to traverse the list until you reach the last node. Then, you can set the next pointer of the last node to point to the newnode. If the list is empty then set the head to the newnode. temp is just a temporary node just like count variable, after the operation it does’nt have any importance. // insertation at end void insertATend(int value) { struct Node *newnode; newnode = (struct Node *)malloc(sizeof(struct Node)); newnode-\u003edata = value; if (head == NULL) { newnode-\u003enext = NULL; head = newnode; } else { struct Node *temp; temp = head; while (temp-\u003enext != NULL) { temp = temp-\u003enext; } temp-\u003enext = newnode; newnode-\u003enext = NULL; } printf(\"%d is inserted at the end.\\n\", value); } Traversal Technique Traversal is the process or technique of visiting and processing each node in a data structure, such as a linked list, tree, or graph. There are several way to traverse. Here we use the simple traversal technique in which we form a temp variable or node and traverse the each node one by one just pointing to the next pointer to the temp. temp=temp-\u003enext; ","date":"25-12-2022","objectID":"/single_linked_list/:3:2","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"3.3 Insertion at Any Position To insert a new node at a desired position in the list, first you need to make a temporary node say temp initialise with head then traverse the list until you reach the node before the position where you want to insert the newnode. Then, you can set the next pointer of the newnode to point to the node at the desired position, and set the next pointer of the node before the position to point to the newnode. // insertion at any position void insertAtPos(int pos, int value) { struct Node *newnode; newnode = (struct Node *)malloc(sizeof(struct Node)); newnode-\u003edata = value; struct Node *temp = NULL; int i = 1; temp = head; while (i \u003c pos - 1) { temp = temp-\u003enext; i++; } newnode-\u003enext = temp-\u003enext; temp-\u003enext = newnode; printf(\"%d is inserted at the %dth position.\\n\", value, pos); } Seg Fault Here you get a segmentation fault if you enter that position which are not exist in the list. For this first you have to check whether the position is present or not in the list then insert the node at that position. ","date":"25-12-2022","objectID":"/single_linked_list/:3:3","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"4. Deletion A deletion operation in a single linked list involves removing a node from the list and free the space. First make a temp node, traverse to that node and do the operation. There are several ways to delete a node from the list: Deleting the head node Deleting the last node Deleting a node from the specific position of the list ","date":"25-12-2022","objectID":"/single_linked_list/:4:0","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"4.1 Deletion from Begining To delete the head node or first node, first you have to make a temp node initialise with head then set the head of the list to the next node in the list. Now free the temp. // deletion at begining void deleteatBeg() { if (head == NULL) { printf(\"The list is empty.\\n\"); } else { struct Node *temp; temp = head; head = head-\u003enext; printf(\"%d is deleted from the begining\\n\", temp-\u003edata); free(temp); } } ","date":"25-12-2022","objectID":"/single_linked_list/:4:1","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"4.2 Deletion from End To delete the last node, make a temp node traverse the list until you reach the second-to-last node. Set the temp to the last node of the list. Then, you can set the next pointer of the second-to-last node to null. Now free the temp. // deletion at end void deleteatEnd() { if (head == NULL) { printf(\"The list is empty.\\n\"); } else { struct Node *temp, *prev; prev = temp = head; while (temp-\u003enext != NULL) { prev = temp; temp = temp-\u003enext; } prev-\u003enext = NULL; printf(\"%d is deleted from the end\\n\", temp-\u003edata); free(temp); } } ","date":"25-12-2022","objectID":"/single_linked_list/:4:2","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"4.3 Deletion from Any Position To delete a node in the middle of the list, you need to traverse the list until you reach the node before the one you want to delete. Set the temp to the node to be deleted in the list. Then, you can set the next pointer of the previous node to point to the node after the one you want to delete. Free the temp. // deletion at any position void deleteatPos(int pos) { struct Node *nextnode, *temp; int i = 1; nextnode = temp = head; while (i \u003c pos) { temp = nextnode; nextnode = nextnode-\u003enext; i++; } temp-\u003enext = nextnode-\u003enext; printf(\"%d is deleted from the %dth position.\\n\", nextnode-\u003edata, pos); free(nextnode); } Seg Fault Here also you get a segmentation fault if you delete that position which are not exist in the list. For this first you have to check whether the position is present or not in the list then delete the node from that position. ","date":"25-12-2022","objectID":"/single_linked_list/:4:3","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"5. Sorting There are several way to sort the list. // sorting of linked list void sortlist() { struct Node *ptr, *cpt; ptr = head; int temp; while (ptr-\u003enext != NULL) { cpt = ptr-\u003enext; while (cpt != NULL) { if (ptr-\u003edata \u003e cpt-\u003edata) { temp = ptr-\u003edata; ptr-\u003edata = cpt-\u003edata; cpt-\u003edata = temp; } cpt = cpt-\u003enext; } ptr = ptr-\u003enext; } printf(\"The list is sorted successfully.\\n\"); } ","date":"25-12-2022","objectID":"/single_linked_list/:5:0","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"6. Reversing To reverse the linked list, You have to iterate the linked list and for each node, changing the next pointer to point to the previous node instead of the next node as it traverses the linked list. This effectively reverses the order of the nodes in the linked list. The function returns the reversed linked list by returning the last node in the original linked list as the new head. // to reverse the list void reverse() { struct Node *current = head; struct Node *prev = NULL, *next = NULL; while (current != NULL) { next = current-\u003enext; current-\u003enext = prev; prev = current; current = next; } head = prev; printf(\"The list is reversed successfully.\\n\"); } ","date":"25-12-2022","objectID":"/single_linked_list/:6:0","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"7. Print Function To print the list you have to travarse the list and print each node one by one. For this make a temp node initialise with head, travarse and print. // printing of linked list void display() { printf(\"The list is: \"); struct Node *temp; temp = head; while (temp != NULL) { printf(\"%d \", temp-\u003edata); temp = temp-\u003enext; } printf(\"\\n\\n\"); } ","date":"25-12-2022","objectID":"/single_linked_list/:7:0","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"8. To Find Length To find the length of the list, first make a temp node initialise with head than travarse the list and increment the count by 1 on every travarsal until you reach to the last node. At last print the count value. // length of the linked int getlength() { int count = 0; struct Node *temp = head; while (temp != NULL) { count++; temp = temp-\u003enext; } printf(\"Total nodes present in the list is: %d\\n\", count); } ","date":"25-12-2022","objectID":"/single_linked_list/:8:0","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":"9. Main Function In the main function. we check all the function whether they are working or not, call all the functions one by one. // main function int main() { insertAtBeg(34); insertAtBeg(45); insertAtBeg(72); insertAtBeg(50); insertAtBeg(89); insertAtBeg(99); insertATend(23); insertATend(55); insertATend(13); insertATend(41); insertAtPos(6, 8992); display(); deleteatBeg(); deleteatEnd(); deleteatPos(3); display(); sortlist(); display(); insertATend(58); display(); reverse(); display(); insertAtBeg(99); insertATend(23); display(); getlength(); return 0; } Note It will be a better practice if you take the input from the user in the output terminal. In this case the main function will be: // main function int main() { int choice,value,pos; printf(\"1) Insert at begining\\n\"); printf(\"2) insert at last\\n\"); printf(\"3) Insert at any position\\n\"); printf(\"4) Delete from the begining\\n\"); printf(\"5) Delete from the end\\n\"); printf(\"6) Delete from any position\\n\"); printf(\"7) Sort the list\\n\"); printf(\"8) Reverse the list\\n\"); printf(\"9) Fint the length of the list\\n\"); printf(\"10) Display the list\\n\"); printf(\"11) Exit\\n\") do { printf(\"Enter Choice: \"); scanf(\"%d\",\u0026choice); switch (choice) { case 1: printf(\"Enter value to be inserted: \"); scanf(\"%d\",\u0026value); insertAtBeg(value); break; case 2: printf(\"Enter value to be inserted: \"); scanf(\"%d\",\u0026value); insertATend(value); break; case 3: printf(\"Enter the position and the value to be inserted respectively: \"); scanf(\"%d%d\",\u0026pos,\u0026value); insertAtPos(pos,value); break; case 4: deleteatBeg(); break; case 5: deleteatEnd(); break; case 6: printf(\"Enter the position of the node to be deleted: \"); scanf(\"%d\",\u0026pos); deleteatPos(pos); break; case 7: sortlist(); break; case 8: reverse(); break; case 9: getlength(); break; case 10: display(); break; case 11: printf(\"Exit\"); break; default: break; } } while (choice!=11) return 0; } Complete Code of Single Linked List: Code Fun Dose Problems Linked List 1 (CodeChef) Linked List 2 (CodeChef) Reversed Linked List (HackerEarth) Remove Friends (HackerEarth) ","date":"25-12-2022","objectID":"/single_linked_list/:9:0","tags":["C","C++"],"title":"Single Linked List","uri":"/single_linked_list/"},{"categories":["DSA"],"content":" Note Use the table of contents to navigate to the portion that you are interested in. ","date":"30-11-2023","objectID":"/binary-search/:0:0","tags":["C","C++"],"title":"Binary Search","uri":"/binary-search/"},{"categories":["DSA"],"content":"Introduction We know that there is two type of searching technique 1.Linear Search and 2.Binary Search. Here we discus only about binary search. Binary search is a searching technique, it is used to locate a specific element with in the sorted array. Warning It is applicable only on monotonic function which means values should be in the increasing or decreasing order. ","date":"30-11-2023","objectID":"/binary-search/:1:0","tags":["C","C++"],"title":"Binary Search","uri":"/binary-search/"},{"categories":["DSA"],"content":"Time Complexity: Option Description Best Case: O(1) Average Case: O(log N) Worst Case: O(log N) ","date":"30-11-2023","objectID":"/binary-search/:1:1","tags":["C","C++"],"title":"Binary Search","uri":"/binary-search/"},{"categories":["DSA"],"content":"Space Complexicity: Option Description Best Case: O(1) ","date":"30-11-2023","objectID":"/binary-search/:1:2","tags":["C","C++"],"title":"Binary Search","uri":"/binary-search/"},{"categories":["DSA"],"content":"Creation of Function First initialise start and end indices to the first and last element of the array respectively. then calculate the middle index by (start+end)/2. Inside the while loop, compare the value of mid with the key until the start index becomes less than or equal to the end index. Here three cases arises. Case 1: If the key matches with the mid element it returns the mid element. Case 2: If the key is greater than the mid element then we have to check the right part of the array for that we have to initialise the start as mid + 1. Case 3: If the key is less than the mid element than we have to check the left part of the array for that we have to update the end as mid - 1. Tip use mid= start + (end-start)/2 instead of (start+end)/2. #include\u003ciostream\u003e using namespace std; int binarysearch(int arr[], int size, int key) { int start =0; int end = size-1; //int mid= (start+end)/2; int mid= start + (end-start)/2; while(start \u003c= end){ if(arr[mid] == key){ return mid; } if(key\u003e arr[mid]){ //go to right part start= mid +1 ; } else{ end= mid - 1; //go to left part } //mid= (start+end)/2; mid = start + (end-start)/2; } return -1; } ","date":"30-11-2023","objectID":"/binary-search/:2:0","tags":["C","C++"],"title":"Binary Search","uri":"/binary-search/"},{"categories":["DSA"],"content":"The Main Function Now we check the code for both if the number of elements in the array is even or odd. In the main function we define two arrays 1st is even array and the 2nd one is odd array. After that we call the function and store the result in evenindex for even array and in oddindex for odd array after that we print the indexes. Here we see that our function works properly for both cases. We can see the output. int main() { int even[6]= {2,4,6,8,12,18}; int odd[5]= {3,8,11,14,16}; int evenindex= binarysearch(even, 6, 6); cout\u003c\u003c\"index of 6 is \"\u003c\u003cevenindex \u003c\u003c endl; int oddindex= binarysearch(odd, 5, 14); cout\u003c\u003c\"index of 14 is \"\u003c\u003coddindex \u003c\u003c endl; return 0; } ","date":"30-11-2023","objectID":"/binary-search/:3:0","tags":["C","C++"],"title":"Binary Search","uri":"/binary-search/"},{"categories":["DSA"],"content":"Output We got the right output for both cases. Complete Code #include\u003ciostream\u003e //it applicable only on monotonic function values should be in inc or dec order. using namespace std; int binarysearch(int arr[], int size, int key) { int start =0; int end = size-1; //int mid= (start+end)/2; int mid= start + (end-start)/2; while(start \u003c= end){ if(arr[mid] == key){ return mid; } //go to right part if(key\u003e arr[mid]){ start= mid +1 ; } else{ end= mid - 1; } //mid= (start+end)/2; mid = start + (end-start)/2; } return -1; } int main(){ int even[6]= {2,4,6,8,12,18}; int odd[5]= {3,8,11,14,16}; int evenindex= binarysearch(even, 6, 6); cout\u003c\u003c\"index of 6 is \"\u003c\u003cevenindex \u003c\u003c endl; int oddindex= binarysearch(odd, 5, 14); cout\u003c\u003c\"index of 14 is \"\u003c\u003coddindex \u003c\u003c endl; return 0; } ","date":"30-11-2023","objectID":"/binary-search/:3:1","tags":["C","C++"],"title":"Binary Search","uri":"/binary-search/"},{"categories":["DSA"],"content":"Advantages \u0026 Drawbacks Advantages faster than linear search More efficient Minimal memory requirement Easy to understand and implement More efficient for large dataset Drawbacks The array should be sorted. Not suitable for unordered lists Inefficient for small dataset Not adaptive for changes Limited to static dataset Applications Database searching Finding elements in a array Used in file system to search a specific file In machine learning In Game development Problems First and Last position of an Element in Sorted Array (Coding Ninjas) Binary Search (Coding Ninjas) First and Last position of an element in sorted array solution // pair \u003cint, int\u003e p; // p.first = 5; // p.second = 6; #include\u003ciostream\u003e using namespace std; int firstOccurance(int arr[], int n, int key){ int start = 0; int end = n-1; int mid = start +(end-start)/2; int ans = -1; while(start \u003c= end) { if (arr[mid]== key) { ans = mid; end = mid - 1; } else if (arr[mid] \u003c key) { // go to right part start = mid + 1; } else if (arr[mid] \u003e key) { // go to left part end = mid -1; } mid = start + (end - start)/2; } return ans; } int lastOccurance(int arr[], int n, int key){ int start = 0; int end = n-1; int mid = start +(end-start)/2; int ans = -1; while(start \u003c= end) { if (arr[mid]== key) { ans = mid; start = mid + 1; } else if (arr[mid] \u003c key) { // go to right part start = mid + 1; } else if (arr[mid] \u003e key) { // go to left part end = mid -1; } mid = start + (end - start)/2; } return ans; } pair\u003cint , int\u003e firstAndLastOccurance(int arr[], int n, int key){ pair\u003cint , int \u003e p; p.first = firstOccurance(arr , n, key); p.second = lastOccurance(arr , n , key); return p; } int main() { int arr[9]={1,2,3,3,3,3,3,4,5}; cout \u003c\u003c \" first occurace of 3 is index \" \u003c\u003c firstOccurance(arr, 9 , 3) \u003c\u003c endl; cout \u003c\u003c \" last occurace of 3 is index \" \u003c\u003c lastOccurance(arr, 9 , 3) \u003c\u003c endl; firstAndLastOccurance(arr, 9, 3); } Fun Dose ","date":"30-11-2023","objectID":"/binary-search/:4:0","tags":["C","C++"],"title":"Binary Search","uri":"/binary-search/"},{"categories":["DSA"],"content":" Note Use the table of contents to navigate to the portion that you are interested in. Intro: Traversal in graph: ","date":"30-11-2023","objectID":"/graph/:0:0","tags":["C","C++"],"title":"Graph","uri":"/graph/"},{"categories":["DSA"],"content":"Bfs: // bfs of graph // 0 based indexing // gfg ques // vector\u003cint\u003e adj[] -\u003e adjacency list vector\u003cint\u003e bfsOfGraph(int V, vector\u003cint\u003e adj[]) { // Code here int vis[V] = {0}; // visited arrray mark all element initially zero vis[0] = 1; // marked visted for 0 queue\u003cint\u003e q; q.push(0); // pushing starting node in the queue vector\u003cint\u003e bfs; // to store the bfs traversal of the graph while (!q.empty()) { int node = q.front(); q.pop(); bfs.push_back(node); // store the node in bfs // pushing the neighbors of the node in the queue if not visited for (auto i : adj[node]) { if (!vis[i]) { vis[i] = 1; // mark visited q.push(i); // push the node in the queue } } } return bfs; // space complexicity = O(3N) --\u003e O(N) // time complexicity = O(N) + O(2E) } ","date":"30-11-2023","objectID":"/graph/:0:1","tags":["C","C++"],"title":"Graph","uri":"/graph/"},{"categories":["DSA"],"content":"Dfs: // Function to return a list containing the DFS traversal of the graph. void dfs(int node, vector\u003cint\u003e adj[], int vis[], vector\u003cint\u003e \u0026ls) { vis[node] = 1; // mark node visited ls.push_back(node); // list to store dfs traversal // traverse all its neighbours of the node for (auto i : adj[node]) { // if non visited call dfs again if (!vis[i]) { // recursive call dfs(i, adj, vis, ls); } } } vector\u003cint\u003e dfsOfGraph(int V, vector\u003cint\u003e adj[]) { // Code here int vis[V] = {0}; // visited array int start = 0; vector\u003cint\u003e ls; // list to store dfs traversal dfs(start, adj, vis, ls); return ls; } conversion from adjacency matrix to adjancency list // conversion from adjacency matrix to adjancency list vector\u003cint\u003e adjList[V]; for (int i = 0; i \u003c V; i++) { for (int j = 0; j \u003c V; j++) { if (adj[i][j] == 1 \u0026\u0026 i != j) { adjList[i].push_back(j); adjList[j].push_back(i); } } } ","date":"30-11-2023","objectID":"/graph/:0:2","tags":["C","C++"],"title":"Graph","uri":"/graph/"},{"categories":["DSA"],"content":"detect cycle in undirected graph // detect cycle in undirected graph bool detect(int src , vector\u003cint\u003e adj[], int vis[]){ vis[src] = 1; queue\u003cpair\u003cint, int\u003e q; q.push({src , -1}); while(!q.empty()){ int node = q.front().first; int parent = q.front().second; q.pop(); for(auto adjnode : adj[node]){ if(!vis[adjnode]){ vis[adjnode] = 1; q.push({adjnode , node}); } else if(parent != adjnode){ return true; } } } return false; } bool iscysle(int v, vector\u003cint\u003e adj[]){ int vis[v] = {0}; for(int i=0; i\u003cv; i++){ if(!vis[i]){ if(detect(i,adj,vis)){ return true; } } } return false; } ","date":"30-11-2023","objectID":"/graph/:0:3","tags":["C","C++"],"title":"Graph","uri":"/graph/"},{"categories":["DSA"],"content":"No of islands: // Function to find the number of islands. void dfs(int i,int j,vector\u003cvector\u003cchar\u003e\u003e \u0026grid){ if(i\u003e=grid.size() || j\u003e=grid[0].size() || grid[i][j]=='0' || i\u003c0 || j\u003c0){ return; } grid[i][j]='0'; dfs(i,j-1,grid); dfs(i-1,j,grid); dfs(i,j+1,grid); dfs(i+1,j,grid); dfs(i-1,j-1,grid); dfs(i-1,j+1,grid); dfs(i+1,j-1,grid); dfs(i+1,j+1,grid); } int numIslands(vector\u003cvector\u003cchar\u003e\u003e\u0026 grid) { // Code here int n = grid.size(); int m = grid[0].size(); // vector\u003cvector\u003cint\u003e\u003e vis(n , vector\u003cint\u003e(m,0)); int cnt = 0; for(int row= 0 ; row\u003c n;row++){ for(int col =0; col\u003cm; col++){ if( grid[row][col] == '1') { cnt++; dfs(row,col, grid); } } } return cnt; } ","date":"30-11-2023","objectID":"/graph/:0:4","tags":["C","C++"],"title":"Graph","uri":"/graph/"},{"categories":["DSA"],"content":"No of provinces: // dfs function void dfs(int node, vector\u003cint\u003e adj[], int vis[] ){ vis[node] = 1; // mark node visited // traverse all its neighbours of the node for(auto i: adj[node]){ // if non visited call dfs again if(!vis[i]){ // recursive call dfs(i, adj , vis ); } } } int numProvinces(vector\u003cvector\u003cint\u003e\u003e adj, int V) { // code here // conversion from adjacency matrix to adjancency list vector\u003cint\u003e adjList[V]; for(int i =0; i\u003cV ; i++){ for(int j=0 ; j\u003c V ;j++){ if(adj[i][j] == 1 \u0026\u0026 i != j){ adjList[i].push_back(j); adjList[j].push_back(i); } } } int vis[V] = {0}; int count = 0; for(int i = 0; i\u003c V; i++){ if(!vis[i]){ count++; dfs(i,adjList,vis); } } return count; } ","date":"30-11-2023","objectID":"/graph/:0:5","tags":["C","C++"],"title":"Graph","uri":"/graph/"},{"categories":["DSA"],"content":"surrounded regins : Replace O’s with X’s in a given matrix: // replace O's with X's in a given matrix // gfg: https://www.geeksforgeeks.org/problems/replace-os-with-xs0052/1 void dfs(int row, int col, vector\u003cvector\u003cint\u003e\u003e \u0026vis, vector\u003cvector\u003cchar\u003e\u003e \u0026mat) { // mark visited vis[row][col] = 1; // check for all 4 direction up ,right, down, left int delrow[] = {-1, 0, +1, 0}; int delcol[] = {0, +1, 0, -1}; int n = mat.size(); // row size int m = mat[0].size(); // column size // traverse in all 4 direction for (int i = 0; i \u003c 4; i++) { // new row and new column int nrow = row + delrow[i]; int ncol = col + delcol[i]; if (nrow \u003e= 0 \u0026\u0026 nrow \u003c n \u0026\u0026 ncol \u003e= 0 \u0026\u0026 ncol \u003c m \u0026\u0026 !vis[nrow][ncol] \u0026\u0026 mat[nrow][ncol] == 'O') { // recursive call dfs(nrow, ncol, vis, mat); } } } vector\u003cvector\u003cchar\u003e\u003e fill(int n, int m, vector\u003cvector\u003cchar\u003e\u003e mat) { // code here // n-\u003e rows; // m-\u003e col vector\u003cvector\u003cint\u003e\u003e vis(n, vector\u003cint\u003e(m, 0)); // vector\u003cvector\u003cchar\u003e\u003e temp = mat; // check first row and last row for (int j = 0; j \u003c m; j++) { // first row if (mat[0][j] == 'O' \u0026\u0026 vis[0][j] == 0) { // call dfs dfs(0, j, vis, mat); } // last row if (mat[n - 1][j] == 'O' \u0026\u0026 vis[n - 1][j] == 0) { // call dfs dfs(n - 1, j, vis, mat); } } // check first and last column for (int i = 0; i \u003c n; i++) { // first col if (mat[i][0] == 'O' \u0026\u0026 vis[i][0] == 0) { // call dfs dfs(i, 0, vis, mat); } // last col if (mat[i][m - 1] == 'O' \u0026\u0026 vis[i][m - 1] == 0) { // call dfs dfs(i, m - 1, vis, mat); } } // after checking boundaries mark all remaining Os with Xs in the matrix for (int i = 0; i \u003c n; i++) { for (int j = 0; j \u003c m; j++) { if (mat[i][j] == 'O' \u0026\u0026 !vis[i][j]) { mat[i][j] = 'X'; } } } return mat; } error ","date":"30-11-2023","objectID":"/graph/:0:6","tags":["C","C++"],"title":"Graph","uri":"/graph/"},{"categories":["DSA"],"content":"Detect cycle in directed graph: // detect cycle in directed graph // gfg: https://www.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1 bool dfs(vector\u003cint\u003e adj[] , int vis[] , int pathvis[] , int node){ vis[node] = 1; pathvis[node] = 1; // traverse the adjacent ndoes for(auto it : adj[node]){ if(!vis[it]){ if(dfs(adj , vis , pathvis , it)){ return true; } } // if the node has been previously visited // but it has to be visited on the same path else if(pathvis[it]){ return true; } } pathvis[node] = 0; return false; } bool isCyclic(int V, vector\u003cint\u003e adj[]) { // code here int vis[V]= {0}; int pathvis[V] = {0}; for(int i =0; i\u003c V; i++){ if(!vis[i]){ if(dfs(adj , vis , pathvis , i)){ return true; } } } return false; } ","date":"30-11-2023","objectID":"/graph/:0:7","tags":["C","C++"],"title":"Graph","uri":"/graph/"},{"categories":["DSA"],"content":"Rotten Oranges: int orangesRotting(vector\u003cvector\u003cint\u003e\u003e\u0026 grid) { // Code here int n = grid.size(); int m = grid[0].size(); queue\u003cpair\u003cpair\u003cint , int\u003e , int\u003e\u003e q; int vis[n][m]; for(int i =0; i \u003c n ; i++){ for(int j =0; j\u003cm ; j++){ if(grid[i][j] == 2){ q.push({{i, j} , 0}); vis[i][j] = 2; } else{ vis[i][j] = 0; } } } int tm =0; int drow[] = {-1,0,+1,0}; int dcol[] = { 0 , +1 , 0 , -1}; while(!q.empty()){ int r = q.front().first.first; int c = q.front().first.second; int t = q.front().second; tm = max(tm , t); q.pop(); for(int i =0; i \u003c 4 ; i++){ int nrow = r+drow[i]; int ncol = c + dcol[i]; if(nrow \u003e= 0 \u0026\u0026 nrow \u003c n \u0026\u0026 ncol \u003e=0 \u0026\u0026 ncol \u003c m \u0026\u0026vis[nrow][ncol] == 0 \u0026\u0026 grid[nrow][ncol] == 1){ q.push({{nrow,ncol}, t+1}); vis[nrow][ncol] = 2; } } } for(int i =0; i\u003cn ; i++){ for(int j =0 ; j\u003cm ; j++){ if(vis[i][j] != 2 \u0026\u0026 grid[i][j] == 1){ return -1; } } } return tm; } ","date":"30-11-2023","objectID":"/graph/:0:8","tags":["C","C++"],"title":"Graph","uri":"/graph/"},{"categories":["DSA"],"content":" Note Use the table of contents to navigate to the portion that you are interested in. ","date":"15-01-2023","objectID":"/stack/:0:0","tags":["C","C++"],"title":"Stack (array implementation)","uri":"/stack/"},{"categories":["DSA"],"content":"Introduction Stack is a linear data structure that follows a particular order in which several type of operations like push pull are performed. The order can be LIFO or FILO, both are same so don’t be confused. LIFO:(Last in first out) It means which element that can be filled at last that will be removed first. FILO:(first in last out) It means that element will be removed at last which is filled at first. Operations that can be performed: push pop peek isempty ","date":"15-01-2023","objectID":"/stack/:1:0","tags":["C","C++"],"title":"Stack (array implementation)","uri":"/stack/"},{"categories":["DSA"],"content":"Creation of stack The class has three properties: arr a pointer array to store the stack elements, top to represent the topmost index in the stack, and size to specify the maximum capacity of the stack. Also, the class has a constructor that takes an integer size as a parameter and initializes the properties accordingly. The constructor allocates memory for the stack using the new keyword, sets the stack size, and initializes top to -1 to indicate that the stack is initially empty. //array emplementation of stack #include\u003ciostream\u003e using namespace std; class stack { //properties public: int *arr; int top; int size; //behaviour stack(int size) { this -\u003e size = size; arr = new int[size]; top=-1; } }; ","date":"15-01-2023","objectID":"/stack/:2:0","tags":["C","C++"],"title":"Stack (array implementation)","uri":"/stack/"},{"categories":["DSA"],"content":"Push Function The push function is part of the stack class. It adds a new element to the stack. It checks if there is space available by comparing the difference between the maximum size of the stack and the current top index. If space is available, the function increments the top index to make room for the new element, assigns the new element to the top position in the array, effectively adding it to the stack. If the stack is already full, the function prints an error message indicating “stack overflow,” signifying that the operation cannot be performed. //push function void push (int element) { if(size-top \u003e1 ){ top++; arr[top] = element; } else{ cout \u003c\u003c \"stack overflow\" \u003c\u003c endl; } } ","date":"15-01-2023","objectID":"/stack/:3:0","tags":["C","C++"],"title":"Stack (array implementation)","uri":"/stack/"},{"categories":["DSA"],"content":"Pop Function The pop function remove the topmost element from the stack, it follows the (LIFO) principle. It first checks if there are any elements in the stack by examining the value of the top index. If the top index is greater than or equal to 0, it means there is at least one element in the stack. In that case, the function decrements the top index, effectively removing the top element and making the next element (if any) the new top. However, if the top index is less than 0, it means the stack is empty, and there are no elements to remove. In this situation, the function prints an error message, “stack underflow,”. //pop function void pop(){ if(top \u003e= 0){ top--; } else{ cout\u003c\u003c \" stack underflow \"\u003c\u003cendl; } } ","date":"15-01-2023","objectID":"/stack/:4:0","tags":["C","C++"],"title":"Stack (array implementation)","uri":"/stack/"},{"categories":["DSA"],"content":"Peek Function The peek function is used to look at the topmost element of the stack without removing it. When called, the function first checks if there are any elements in the stack by examining the value of the top index. If the top index is greater than or equal to 0, it means there is at least one element in the stack. In this case, the function returns the value of the element at the top position. However, if the top index is less than 0, it means the stack is empty, and there are no elements to peek at. In this situation, the function prints an error message, “stack is empty,” and returns -1 to indicate that there’s no valid element to return. int peek() { if(top \u003e=0 ) return arr[top]; else{ cout \u003c\u003c\"stack is empty \"\u003c\u003cendl; return -1; } } ","date":"15-01-2023","objectID":"/stack/:5:0","tags":["C","C++"],"title":"Stack (array implementation)","uri":"/stack/"},{"categories":["DSA"],"content":"IsEmpty function The isempty function is used to check whether the stack is empty or not. When called, the function examines the value of the top index, which represents the position of the topmost element in the stack. If the top index is equal to -1, it means there are no elements in the stack, and it is considered empty. In this case, the function returns true to indicate that the stack is empty. However, if the top index is not -1, it means there is at least one element in the stack, and it is not empty. In this situation, the function returns false to indicate that the stack is not empty. In summary, the isempty function provides a convenient way to check the emptiness status of the stack, returning true if it’s empty and false if it contains elements. bool isempty(){ if(top == -1){ return true; } else{ return false; } } ","date":"15-01-2023","objectID":"/stack/:6:0","tags":["C","C++"],"title":"Stack (array implementation)","uri":"/stack/"},{"categories":["DSA"],"content":"The main function In this C++ code, the main function demonstrates the usage of a stack. Firstly, it creates a stack object st with a size of 5. Then, it uses the push function to add three elements (22, 33, and 44) to the stack. The peek function is called to print the top element 44. Subsequently, the pop function is used to remove the top element from the stack, and peek is called again to print the new top element 33. This process is repeated two more times with the last element 22 being popped, and peek is called again, but the stack is now empty. Finally, the isempty function is called to verify if the stack is empty, and it prints stack is empty as the output, confirming that the stack is empty at this point. int main(){ stack st(5); st.push(22); st.push(33); st.push(44); cout \u003c\u003c st.peek()\u003c\u003cendl; st.pop(); cout \u003c\u003c st.peek()\u003c\u003cendl; st.pop(); cout \u003c\u003c st.peek()\u003c\u003cendl; st.pop(); cout \u003c\u003c st.peek()\u003c\u003cendl; if(st.isempty()){ cout\u003c\u003c \"stack is empty\"\u003c\u003cendl; } else cout\u003c\u003c\"stack is not empty\"\u003c\u003cendl; } output of the following code Complete Code //array emplementation of stack #include\u003ciostream\u003e using namespace std; class stack { //properties public: int *arr; int top; int size; //behaviour stack(int size) { this -\u003e size = size; arr = new int[size]; top=-1; } void push (int element) { if(size-top \u003e1 ){ top++; arr[top] = element; } else{ cout \u003c\u003c \"stack overflow\" \u003c\u003c endl; } } void pop(){ if(top \u003e= 0){ top--; } else{ cout\u003c\u003c \" stack underflow \"\u003c\u003cendl; } } int peek() { if(top \u003e=0 ) return arr[top]; else{ cout \u003c\u003c\"stack is empty \"\u003c\u003cendl; return -1; } } bool isempty(){ if(top == -1){ return true; } else{ return false; } } }; int main(){ stack st(5); st.push(22); st.push(33); st.push(44); cout \u003c\u003c st.peek()\u003c\u003cendl; st.pop(); cout \u003c\u003c st.peek()\u003c\u003cendl; st.pop(); cout \u003c\u003c st.peek()\u003c\u003cendl; st.pop(); cout \u003c\u003c st.peek()\u003c\u003cendl; if(st.isempty()){ cout\u003c\u003c \"stack is empty\"\u003c\u003cendl; } else cout\u003c\u003c\"stack is not empty\"\u003c\u003cendl; } Problems Two stack (Coding ninjas) Middle element (Coding ninjas) ","date":"15-01-2023","objectID":"/stack/:7:0","tags":["C","C++"],"title":"Stack (array implementation)","uri":"/stack/"},{"categories":["DSA"],"content":" Note Use the table of contents to navigate to the portion that you are interested in. ","date":"20-01-2023","objectID":"/binary-tree/:0:0","tags":["C","C++"],"title":"Binary Tree","uri":"/binary-tree/"},{"categories":["DSA"],"content":"Intro ","date":"20-01-2023","objectID":"/binary-tree/:1:0","tags":["C","C++"],"title":"Binary Tree","uri":"/binary-tree/"},{"categories":["DSA"],"content":"Basic operations in the binary tree Inserting an element Removing Searching Traversing Height of the tree Level of a node Size of the tree ","date":"20-01-2023","objectID":"/binary-tree/:2:0","tags":["C","C++"],"title":"Binary Tree","uri":"/binary-tree/"},{"categories":["DSA"],"content":"Application of binary tree ","date":"20-01-2023","objectID":"/binary-tree/:3:0","tags":["C","C++"],"title":"Binary Tree","uri":"/binary-tree/"},{"categories":["DSA"],"content":"Creation of binary tree First we create a class with name node which represent a node of the binary tree. Each node contain the data, pointer to the left child and pointer the right child. By the following code we #include\u003ciostream\u003e #include \u003cqueue\u003e using namespace std; class node { public: int data; node* left; node* right; node(int d) { this -\u003e data=d; this -\u003e left = NULL; this -\u003e right = NULL; } }; node* buildTree(node* root) { cout\u003c\u003c\"Enter The Data:\" \u003c\u003cendl; int data; cin\u003e\u003edata; root = new node(data); if(data== -1) { return NULL; } cout \u003c\u003c \"Enter data for inserting in left of \"\u003c\u003cdata \u003c\u003c endl; root-\u003eleft = buildTree(root-\u003eleft); cout \u003c\u003c\" Enter data for inserting in right of \"\u003c\u003cdata\u003c\u003c endl; root -\u003e right = buildTree(root-\u003eright); return root; } ","date":"20-01-2023","objectID":"/binary-tree/:4:0","tags":["C","C++"],"title":"Binary Tree","uri":"/binary-tree/"},{"categories":["DSA"],"content":"Different type of traversals in binary tree level order traversal Inorder Preorder Postorder ","date":"20-01-2023","objectID":"/binary-tree/:5:0","tags":["C","C++"],"title":"Binary Tree","uri":"/binary-tree/"},{"categories":["DSA"],"content":"Levelorder Traversal //level order triversal void levelOrderTraversal(node* root) { queue\u003cnode*\u003e q; q.push(root); q.push(NULL); while(!q.empty()) { node* temp = q.front(); q.pop(); if(temp==NULL){ cout\u003c\u003cendl; if(!q.empty()){ q.push(NULL); } } else{ cout\u003c\u003c temp -\u003e data \u003c\u003c \" \"; if(temp-\u003e left) { q.push ( temp-\u003e left); } if(temp-\u003eright){ q.push ( temp-\u003e right); } } } } ","date":"20-01-2023","objectID":"/binary-tree/:5:1","tags":["C","C++"],"title":"Binary Tree","uri":"/binary-tree/"},{"categories":["DSA"],"content":"Inorder Traversal //inorder traversal void inorder(node* root) { if(root == NULL){ return; } inorder(root-\u003eleft); cout\u003c\u003croot-\u003edata\u003c\u003c\" \"; inorder(root-\u003eright); } ","date":"20-01-2023","objectID":"/binary-tree/:5:2","tags":["C","C++"],"title":"Binary Tree","uri":"/binary-tree/"},{"categories":["DSA"],"content":"Preorder Traversal //preorder traversal void preorder(node* root) { if(root == NULL){ return; } cout\u003c\u003croot-\u003edata\u003c\u003c\" \"; preorder(root-\u003eleft); preorder(root-\u003eright); } ","date":"20-01-2023","objectID":"/binary-tree/:5:3","tags":["C","C++"],"title":"Binary Tree","uri":"/binary-tree/"},{"categories":["DSA"],"content":"Postorder Traversal //post traversal void postorder(node* root) { if(root == NULL){ return; } postorder(root-\u003eleft); postorder(root-\u003eright); cout\u003c\u003croot-\u003edata\u003c\u003c\" \"; } void buildFromLevelOrder(node* \u0026root){ queue\u003cnode*\u003e q;1 3 5 7 11 17 -1 -1 -1 -1 -1 -1 -1 cout\u003c\u003c\"enter data for root\"\u003c\u003cendl; int data; cin\u003e\u003edata; root = new node(data); q.push(root); while(!q.empty()){ node* temp = q.front(); q.pop(); cout\u003c\u003c \" enter left node for: \"\u003c\u003croot-\u003edata\u003c\u003cendl; int leftData; cin\u003e\u003eleftData; if(leftData != -1){ temp-\u003eleft = new node(leftData); q.push(temp-\u003eleft); } cout\u003c\u003c \"enter right node for: \"\u003c\u003croot-\u003edata\u003c\u003cendl; int rightData; cin\u003e\u003erightData; if(rightData != -1){ temp-\u003eright = new node(rightData); q.push(temp-\u003eright); } } } int main() { node* root = NULL; buildFromLevelOrder(root); levelOrderTraversal(root); // 1 3 5 7 11 17 -1 -1 -1 -1 -1 -1 -1 root = buildTree(root); cout\u003c\u003c\"the given tree is:\"\u003c\u003cendl; // 1 3 7 -1 -1 11 -1 -1 5 17 -1 -1 -1 levelOrderTraversal(root); cout\u003c\u003c\"inorder traversal is: \"; inorder(root); cout\u003c\u003cendl; cout\u003c\u003c\"preorder traversal is: \"; preorder(root); cout\u003c\u003cendl; cout\u003c\u003c\"postorder traversal is: \"; postorder(root); return 0; } ","date":"20-01-2023","objectID":"/binary-tree/:5:4","tags":["C","C++"],"title":"Binary Tree","uri":"/binary-tree/"},{"categories":["Cyber Security"],"content":"Google hacking Google hacking is using different google operators to refine search results. Use of a search engine, such as google, to locate a security vulnerability on the internet. ","date":"05-08-2023","objectID":"/google-dorks/:0:1","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Downloading Movie Movie+name -inurl:(htm|html|php|pls|txt) intitle:index.of \"last modified\" (mp4|wma| acc|avi) ","date":"05-08-2023","objectID":"/google-dorks/:0:2","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"View Android Camera Photos: intitle:\"Index of\" \"DCIM\" ","date":"05-08-2023","objectID":"/google-dorks/:0:3","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Google Operators ","date":"05-08-2023","objectID":"/google-dorks/:1:0","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Basic Operators +, -, ., *, \"\", |, OR ","date":"05-08-2023","objectID":"/google-dorks/:1:1","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Advanced Operators allintext:, allintilte:, allinurl:, cache:, define:, filetype:, info:, intext:, intitle:, inurl:, link:, phonebook:, related:, site:, numrange: ","date":"05-08-2023","objectID":"/google-dorks/:1:2","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Advanced Operators “Filetype” find documents with specified extensions examples: Ethical Hacking filetype:txt Networking filetype:ppt site:owasp.org filetype:pdf ","date":"05-08-2023","objectID":"/google-dorks/:1:3","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"filtering Usernames and passwords Example: username password @facebook.com filetype:txt username password @gmail.com filetype:txt username password @yahoo.com filetype:txt username password @twitter.com filetype:txt ","date":"05-08-2023","objectID":"/google-dorks/:1:4","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Advanced Operators “Intitle” intitle: search_term find search term within the title of a webpage Example: intitle: owasp Allintitle: search_term1 search_term2 search_term3 find multiple search terms in the web pages with the title that includes all those words these operators are specifically used to find the directory lists Example: intitle: Index.of “parent directory” intitle: Index.of “movies” ","date":"05-08-2023","objectID":"/google-dorks/:1:5","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Hacking security cameras intitle:\"IVISTA.main.page\" \"please visit\" intitle:\"i-character console\" copyright \"icodesystems\" intitle:\"Live View / - AXIS | inurl:view/view.shtnl ","date":"05-08-2023","objectID":"/google-dorks/:1:6","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Advanced Operators “Inurl:” inurl:search_term find search term in url. allinurl: search_term1 search_term2 search_term3 find multiple search terms in a url. Examples: inurl: admin allinurl: admin login ","date":"05-08-2023","objectID":"/google-dorks/:1:7","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Hacking Printers inurl:websearch/mainframe.cgi ","date":"05-08-2023","objectID":"/google-dorks/:1:8","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"hacking webcam inurl:main.cgilinksys inurl:\"viewframe?mode=motion\" inurl:view/index.shtml inurl:\"toshibaNetwork Camera\" User Login inurl:/view.shtml ","date":"05-08-2023","objectID":"/google-dorks/:1:9","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Advanced Operators “Intext” intext: search_term find search term in the text body of a document. allintext: search_term1 search_term2 search_term3 find multiple search terms in the text body of a document. Example: intext: Password allintext: Admininstrator login site:owasp.org intext:SQL ","date":"05-08-2023","objectID":"/google-dorks/:1:10","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Advanced Operators “cache:” Cache: URL Find the older version of website in google cache sometimes, even the site has already been updated, the old information might be found in cache Examples: cachedview.com web.archive.org ","date":"05-08-2023","objectID":"/google-dorks/:1:11","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Advanced operators “link:” link: URL find the web pages having a link to the specified url. Related: URL find the webpages that are similar to the specified web page info: URL present some information that google has about that web page define: search_term provide a defination of the words gathered from various online sources Examples: link: abc.com related: abc.com info: abc.com define: abc.com ","date":"05-08-2023","objectID":"/google-dorks/:1:12","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Want to see private information index.of.DCIMindex.of.backup ","date":"05-08-2023","objectID":"/google-dorks/:1:13","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"find only pakistani websites site:.pk admin login ","date":"05-08-2023","objectID":"/google-dorks/:1:14","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"google hacking database [GHDB] www.exploit-db.com ","date":"05-08-2023","objectID":"/google-dorks/:1:15","tags":["C"],"title":"Google Dorks","uri":"/google-dorks/"},{"categories":["Cyber Security"],"content":"Here i will help you in your jr penetration tester pathway on THM. ","date":"05-08-2023","objectID":"/jr-penetration-tester/:0:0","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"Introduction to Cyber Security ","date":"05-08-2023","objectID":"/jr-penetration-tester/:1:0","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"Intro to Offensive Security Task 1: Hacking your first machine Q1. When you’ve transferred money to your account, go back to your bank account page. What is the answer shown on your bank balance page? Ans-BANK-HACKED Q2. If you were a penetration tester or security consultant, this is an exercise you’d perform for companies to test for vulnerabilities in their web applications; find hidden pages to investigate for vulnerabilities. No Answer Needed Q3. Terminate the machine by clicking the red “Terminate” button at the top of the page. No Answer Needed Task 2: What is Offensive Security? No answer needed Task 3: Careers in cyber security No answer needed ","date":"05-08-2023","objectID":"/jr-penetration-tester/:1:1","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"Intro to Defensive Security Task 1: Introduction to Defensive Security Which team focuses on defensive security? Ans-Blue Team Task 2: Areas of Defensive Security What would you call a team of cyber security professionals that monitors a network and its systems for malicious events? Ans- Security Operations Center What does DFIR stand for? Ans- Digital Forensics and Incident Response Which kind of malware requires the user to pay money to regain access to their files? Ans- ransomware Task 3: Practical Example of Defensive Security What is the flag that you obtained by following along? Ans- THM{THREAT-BLOCKED} ","date":"05-08-2023","objectID":"/jr-penetration-tester/:1:2","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"Careers in Cyber Task 1: Introduction Task 2: Security Analyst ","date":"05-08-2023","objectID":"/jr-penetration-tester/:1:3","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"Introduction to Pentesting ","date":"05-08-2023","objectID":"/jr-penetration-tester/:2:0","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"Pentesting Fundamentals Task 1: What is Penetration Testing? No Answer Needed. Task 2: Penetration Testing Ethics q1. You are given permission to perform a security audit on an organisation; what type of hacker would you be? Ans- White Hat Q2. You attack an organisation and steal their data, what type of hacker would you be? Ans- Black Hat Q3. What document defines how a penetration testing engagement should be carried out? Ans- Rules of Engagement Task 3: Penetration Testing Methodologies Q1. What stage of penetration testing involves using publicly available information? Ans- Information Gathering Q2. If you wanted to use a framework for pentesting telecommunications, what framework would you use? Note: We’re looking for the acronym here and not the full name. Ans- OSSTMM Q3. What framework focuses on the testing of web applications? Ans- OWASP Task 4: Black box, White box, Grey box Penetration Testing Q1. You are asked to test an application but are not given access to its source code - what testing process is this? Ans- Black Box Q2.You are asked to test a website, and you are given access to the source code - what testing process is this? Ans- White Box Task 5: Practical: ACME Penetration Test Q1. Complete the penetration test engagement against ACME’s infrastructure. Ans- THM{PENTEST_COMPLETE} ","date":"05-08-2023","objectID":"/jr-penetration-tester/:2:1","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"Principles of Security Task 1: Introduction No Answer Needed. Task 2: The CIA Triad Q1. What element of the CIA triad ensures that data cannot be altered by unauthorised people? Ans- integrity Q2. What element of the CIA triad ensures that data is available? Ans- availability Q3. What element of the CIA triad ensures that data is only accessed by authorised people? Ans- confidentiality Task 3: Principles of Privileges Q1. What does the acronym “PIM” stand for? Ans- Privileged Identity Management Q2. What does the acronym “PAM” stand for? Ans- Privileged Access Management Q3. If you wanted to manage the privileges a system access role had, what methodology would you use? Ans- PAM Q4. If you wanted to create a system role that is based on a users role/responsibilities with an organisation, what methodology is this? Ans- PIM Task 4: Security Models Continued Q1. What is the name of the model that uses the rule “can’t read up, can read down”? Ans- the bell-lapadula model Q2. What is the name of the model that uses the rule “can read up, can’t read down”? Ans- the biba model Q3. If you were a military, what security model would you use? Ans- the bell-lapadula model Q4. If you were a software developer, what security model would the company perhaps use? Ans- the biba model Task 5: Threat Modelling \u0026 Incident Response Q1. What model outlines “Spoofing”? Ans- stride Q2. What does the acronym “IR” stand for? Ans- incident response Q3. You are tasked with adding some measures to an application to improve the integrity of data, what STRIDE principle is this? Ans- tampering Q4. An attacker has penetrated your organisation’s security and stolen data. It is your task to return the organisation to business as usual. What incident response stage is this? Ans- recovery ","date":"05-08-2023","objectID":"/jr-penetration-tester/:2:2","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"Introduction to Web Hacking ","date":"05-08-2023","objectID":"/jr-penetration-tester/:3:0","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"Walking An Application Task 1: Walking An Application No Answer Needed. Task 2: Exploring The Website No Answer Needed. Task 3: Viewing The Page Source Q1. What is the flag from the HTML comment? Ans- THM{HTML_COMMENTS_ARE_DANGEROUS} Q2. What is the flag from the secret link? Ans- THM{NOT_A_SECRET_ANYMORE} Q3. What is the directory listing flag? Ans- THM{INVALID_DIRECTORY_PERMISSIONS} Q4. What is the framework flag? Ans- THM{KEEP_YOUR_SOFTWARE_UPDATED} Task 4: Developer Tools - Inspector Q1. What is the flag behind the paywall? Ans- THM{NOT_SO_HIDDEN} Task 5: Developer Tools - Debugger Q1. What is the flag in the red box? Ans- THM{CATCH_ME_IF_YOU_CAN} Task 6: Developer Tools - Network Q1. What is the flag shown on the contact-msg network request? Ans- THM{GOT_AJAX_FLAG} ","date":"05-08-2023","objectID":"/jr-penetration-tester/:3:1","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"Content Discovery Task 1: What Is Content Discovery? Q1. What is the Content Discovery method that begins with M? Ans- Manually Q2. What is the Content Discovery method that begins with A? Ans- Automated Q3. What is the Content Discovery method that begins with O? Ans- OSINT Task 2: Manual Discovery - Robots.txt Q1. What is the directory in the robots.txt that isn’t allowed to be viewed by web crawlers? Ans- /staff-portal Task 3: Manual Discovery - Favicon Q1. What framework did the favicon belong to? Ans- cgiirc Task 4: Manual Discovery - Sitemap.xml What is the path of the secret area that can be found in the sitemap.xml file? Ans- /s3cr3t-area Task 5: Manual Discovery - HTTP Headers Q1. What is the flag value from the X-FLAG header? Ans- THM{HEADER_FLAG} Task 6: Manual Discovery - Framework Stack Q1. What is the flag from the framework’s administration portal? Ans- THM{CHANGE_DEFAULT_CREDENTIALS} Task 7: OSINT - Google Hacking / Dorking Q1. What Google dork operator can be used to only show results from a particular site? Ans- site: Task 8: OSINT - Wappalyzer Q1. What online tool can be used to identify what technologies a website is running? Ans- Wappalyzer Task 9: OSINT - Wayback Machine Q1. What is the website address for the Wayback Machine? Ans- https://archive.org/web/ Task 10: OSINT - GitHub Q1. What is Git? Ans- version control system Task 11: OSINT - S3 Buckets Q1. What URL format do Amazon S3 buckets end in? Ans- .s3.amazonaws.com Task 12: Automated Discovery Q1. What is the name of the directory beginning “/mo….” that was discovered? Ans- /monthly Q2. What is the name of the log file that was discovered? Ans- /development.log ","date":"05-08-2023","objectID":"/jr-penetration-tester/:3:2","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"Subdomain Enumeration Task 1: Brief Q1. What is a subdomain enumeration method beginning with B? Ans- Brute Force Q2. What is a subdomain enumeration method beginning with O? Ans- OSINT Q3. What is a subdomain enumeration method beginning with V? Ans- Virtual Host Task 2: OSINT - SSL/TLS Certificates Q1. What domain was logged on crt.sh at 2020-12-26? Ans- store.tryhackme.com Task 3: OSINT - Search Engines Q1. What is the TryHackMe subdomain beginning with B discovered using the above Google search? Ans- blog.tryhackme.com Task 4: DNS Bruteforce Q1. What is the first subdomain found with the dnsrecon tool? Ans- api.acmeitsupport.thm Task 5: OSINT - Sublist3r Q1. What is the first subdomain discovered by sublist3r? Ans- web55.acmeitsupport.thm Task 6: Virtual Hosts Q1. What is the first subdomain discovered? Ans- delta Q2. What is the second subdomain discovered? Ans- yellow ","date":"05-08-2023","objectID":"/jr-penetration-tester/:3:3","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"Burp Suite ","date":"05-08-2023","objectID":"/jr-penetration-tester/:4:0","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"Burp Suite: The Basics Task 1: Introduction Ans-No answer needed. Task 2: What is Burp Suite? Q1. Which edition of Burp Suite runs on a server and provides constant scanning for target web apps? Ans- Burp Suite Enterprise Q2. Burp Suite is frequently used when attacking web applications and ______ applications. Ans- Mobile Task 3: Features of Burp Community Q1. Which Burp Suite feature allows us to intercept requests between ourselves and the target? Ans- Proxy Q2. Which Burp tool would we use to brute-force a login form? Ans- Intruder Task 4: Installation Q1. If you have chosen not to use the AttackBox, ensure that you have a copy of Burp Suite installed before proceeding. Ans- No answer needed Task 5: The Dashboard Q1. What menu provides information about the actions performed by Burp Suite, such as starting the proxy, and details about connections made through Burp? Ans- Event log Task 6: Navigation Q1. Which tab Ctrl + Shift + P will switch us to? Ans- Proxy tab Task 7: Options Q1. In which category can you find a reference to a “Cookie jar”? Ans- Sessions Q2. In which base category can you find the “Updates” sub-category, which controls the Burp Suite update behaviour? Ans- Suite Q3. What is the name of the sub-category which allows you to change the keybindings for shortcuts in Burp Suite? Ans- Hotkeys Q4. If we have uploaded Client-Side TLS certificates, can we override these on a per-project basis (yea/nay)? Ans- Yea Task 8: Introduction to the Burp Proxy Q1. Click me to proceed to the next task. Ans- No answer needed Task 9: Connecting through the Proxy (FoxyProxy) Q1. Click me to proceed to the next task. Ans- No answer needed Task 10: Site Map and Issue Definitions Q1. What is the flag you receive after visiting the unusual endpoint? Ans-THM{NmNlZTliNGE1MWU1ZTQzMzgzNmFiNWVk} ","date":"05-08-2023","objectID":"/jr-penetration-tester/:4:1","tags":["C"],"title":"THM Jr Penetration Tester Pathway Guide","uri":"/jr-penetration-tester/"},{"categories":["Cyber Security"],"content":"This is the write up for the room Upload Vulnerabilities on Tryhackme and it is part of the Web Fundamentals Path Upload Vulnerabilities Room link: https://tryhackme.com/room/uploadvulns Tools used: Burpsuite gobuster Wappalyser ","date":"08-07-2023","objectID":"/upload-vulnerabilities/:0:0","tags":["C"],"title":"Upload Vulnerabilities","uri":"/upload-vulnerabilities/"},{"categories":["Cyber Security"],"content":"Task 1 Getting Started Let’s deploy the machine to give it a few minutes to boot. click on the Start Machine button. now you have to configure your own pc. open host file on linux /etc/hosts on windows C:\\Windows\\System32\\drivers\\etc\\hosts ","date":"08-07-2023","objectID":"/upload-vulnerabilities/:1:0","tags":["C"],"title":"Upload Vulnerabilities","uri":"/upload-vulnerabilities/"},{"categories":["Cyber Security"],"content":"Task 2 Introduction The purpose of this room to explore some of the vulnerabilities resulting from improper handling of file uploads. We will be looking at: Overwriting existing files on a server Uploading and Executing Shells on a server Bypassing Client-Side filtering Bypassing various kinds of Server-Side filtering Fooling content type validation checks ","date":"08-07-2023","objectID":"/upload-vulnerabilities/:2:0","tags":["C"],"title":"Upload Vulnerabilities","uri":"/upload-vulnerabilities/"},{"categories":["Cyber Security"],"content":"Task 3 General Methodology ","date":"08-07-2023","objectID":"/upload-vulnerabilities/:3:0","tags":["C"],"title":"Upload Vulnerabilities","uri":"/upload-vulnerabilities/"},{"categories":["Cyber Security"],"content":"Task 4 Overwriting Existing Files Answer the questions below What is the name of the image file which can be overwritten? Ans: mountains.jpg Overwrite the image. What is the flag you receive? Ans: THM{OTBiODQ3YmNjYWZhM2UyMmYzZDNiZjI5} ","date":"08-07-2023","objectID":"/upload-vulnerabilities/:4:0","tags":["C"],"title":"Upload Vulnerabilities","uri":"/upload-vulnerabilities/"},{"categories":["DSA"],"content":"Python is used in automation of taskes. Note Use the table of contents to navigate to the portion that you are interested in. Introduction asdfghjklsdfghj Types bubble sort insertion sort merge sort quick sort selection sort ","date":"10-02-2024","objectID":"/sorting/:0:0","tags":["c","c++"],"title":"Sorting Algos","uri":"/sorting/"},{"categories":["DSA"],"content":"Bubble sort // 1. Bubble sort void BubbleSort(int *arr, int length) { for (int i = 0; i \u003c length - 1; i++) { for (int j = 0; j \u003c length - i - 1; j++) { if (arr[j] \u003e arr[j + 1]) { int temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp; } } } } ","date":"10-02-2024","objectID":"/sorting/:1:0","tags":["c","c++"],"title":"Sorting Algos","uri":"/sorting/"},{"categories":["DSA"],"content":"Insertion Sort // 2. Insertion sort void InsertionSort(int *arr, int length) { for (int i = 1; i \u003c length; i++) { int value = arr[i]; int j = i - 1; while (j \u003e= 0 \u0026\u0026 arr[j] \u003e value) { arr[j + 1] = arr[j]; j--; } arr[j + 1] = value; } } ","date":"10-02-2024","objectID":"/sorting/:2:0","tags":["c","c++"],"title":"Sorting Algos","uri":"/sorting/"},{"categories":["DSA"],"content":"Merge Sort // 5. Merge Sort #include \u003cstdio.h\u003e int arr[] = {12, 6, 47, 65, 38, 24, 98, 75, 82, 13, 44, 37}; // global array Decleration for all the sorting Algorithum void merge(int *arr, int s, int e){ int mid = (s+e)/2; // finding midpoint of the array int len1 = mid - s + 1; //length of left part of the array int len2 = e - mid; // length of right part of the array // dynamic memory allocate int *first = new int[len1]; // left array int *second = new int[len2]; // right array // copy values in left part int mainArrayIndex = s; for (int i = 0; i \u003c len1; i++) { first[i] = arr[mainArrayIndex++]; } // copy values in right part mainArrayIndex = mid + 1; for (int i = 0; i \u003c len2; i++) { second[i] = arr[mainArrayIndex++]; } //merging 2 sorted arrays int index1 = 0; int index2 = 0; mainArrayIndex = s; while (index1 \u003c len1 \u0026\u0026 index2\u003c len2) { if (first[index1] \u003c second[index2]) { arr[mainArrayIndex++] = first[index1++]; } else{ arr[mainArrayIndex++] = second[index2++]; } } while (index1 \u003c len1) { arr[mainArrayIndex++] = first[index1++]; } while (index2 \u003c len2) { arr[mainArrayIndex++] = second[index2++]; } // free the memory delete []first; delete []second; } void mergesort(int *arr, int s, int e){ // base case if (s \u003e= e) { return; } // mid point int mid = (s+e)/2; // sorting left part mergesort(arr , s , mid); // sorting right part mergesort(arr , mid+1, e); // merging sorted arrays merge(arr , s, e); } // For Displaying the sorted array or unsorted also void Display(int *arr, int length) { for (int i = 0; i \u003c length; i++) { printf(\"%d \", arr[i]); } } int main() { // int arr[10]= {1,34,32,25,76,68,45,98,23,44}; int n=12; mergesort(arr , 0 , n-1); Display(arr,n); } ","date":"10-02-2024","objectID":"/sorting/:3:0","tags":["c","c++"],"title":"Sorting Algos","uri":"/sorting/"},{"categories":["DSA"],"content":"Quick Sort // 4. Quick Sort with partition code int partition(int *arr, int low, int high) { int pivot = arr[low]; int i = low + 1; int j = high; do { while (arr[i] \u003c= pivot) { i++; } while (arr[j] \u003e pivot) { j--; } if (i \u003c j) { int temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; } } while (i \u003c j); int value = arr[low]; arr[low] = arr[j]; arr[j] = value; return j; } void QuickSort(int *arr, int low, int high) { if (low \u003c high) { int partitionIndex = partition(arr, low, high); QuickSort(arr, low, partitionIndex - 1); QuickSort(arr, partitionIndex + 1, high); } } ","date":"10-02-2024","objectID":"/sorting/:4:0","tags":["c","c++"],"title":"Sorting Algos","uri":"/sorting/"},{"categories":["DSA"],"content":"Selection Sort void SelectionSort(int *arr, int length) { for (int i = 0; i \u003c length; i++) { int min_index = i; for (int j = i + 1; j \u003c length; j++) { if (arr[min_index] \u003e arr[j]) { min_index = j; } } if (min_index != i) { int temp = arr[i]; arr[i] = arr[min_index]; arr[min_index] = temp; } } } ","date":"10-02-2024","objectID":"/sorting/:5:0","tags":["c","c++"],"title":"Sorting Algos","uri":"/sorting/"},{"categories":["DSA"],"content":"Python is used in automation of taskes. Note Use the table of contents to navigate to the portion that you are interested in. Introduction Python is a beginner-friendly, interpreted programming language known for its readability and versatility. With a vast standard library and cross-platform compatibility, it’s widely used in web development, data science, and automation. ","date":"25-01-2024","objectID":"/python/:0:0","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Print function print(\"it's meeeeeeeeeeee\") print('o----') print(' ||||') print('*' * 10) output it's meeeeeeeeeeee o---- |||| ********** ","date":"25-01-2024","objectID":"/python/:0:1","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Datatype price = 10 # integer rating = 4.9 # floating name = 'sumit' # string is_present = False # boolean print(price) ","date":"25-01-2024","objectID":"/python/:0:2","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Input function name = input('what is your name? ') # taking input and store as a 'name' variable fav_colour = input('what is your favourite colour? ') print(name + ' likes ' + fav_colour) birth_year = input('Birth Year: ') print(type(birth_year)) age = 2023 - int(birth_year) print(type(age)) print(name + \"'s age is: \" + str(age)) weight_lbs = input('what is your weight(lbs): ') weight_kg = int(weight_lbs) * 0.45 print ('weight in kg is: ' + weight_kg) name = 'John Smith' age = 20 is_new_patient = True ","date":"25-01-2024","objectID":"/python/:0:3","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"String and character #formatted string first ='sumit' last = 'kr' message = first +'[' + last + '] is a programmer.' msg = f'{first} [{last}] is a coder' # \u003c---formated give same output as message print(message) output sumit [kr] is a programmer. ","date":"25-01-2024","objectID":"/python/:0:4","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Length of a string string = 'you are awesome.' print(len(string)) #general purpose function # output-\u003e 16 ","date":"25-01-2024","objectID":"/python/:0:5","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Converting lower case to uppercase compliment = 'You are awesome.' print(compliment.upper()) #method # output-\u003e YOU ARE AWESOME. print(compliment.lower()) #output-\u003e you are awesome. ","date":"25-01-2024","objectID":"/python/:0:6","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Returning the index of a character in a string statement = 'you are awesome.' print(statement.find('o')) # output-\u003e 1 ","date":"25-01-2024","objectID":"/python/:0:7","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Replacing a word in a string statement = 'hii this is sumit.' print(statement.replace('sumit','sumit kr')) # output-\u003e hii this is sumit kr. print(statement.replace('su','a')) #output-\u003e hii this is amit. ","date":"25-01-2024","objectID":"/python/:0:8","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Checking if the string contain a word or not statement = 'hii this is sumit.' print('sumit' in statement) #output-\u003e True ","date":"25-01-2024","objectID":"/python/:0:9","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Arithmatic operations print(10+3) # output-\u003e 13 print(10/3) # output-\u003e 3.333333 print(10//3) # output-\u003e 3 print(10%3) # output-\u003e 1 print(10 ** 3) # output-\u003e 1000 (ten to the power three) ","date":"25-01-2024","objectID":"/python/:0:10","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Augmanted assignment operator x= 10 x = x + 3 x += 3 # \u003c-- same as upper line which is 13 x -= 3 # output-\u003e 7 x *= 3 x /= 3 ","date":"25-01-2024","objectID":"/python/:0:11","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Presidence order parenthesis exponentiation 2**3 multiplication or division addition or subtraction x= 10 + 3 * 2 ** 2 #output-\u003e 22 x= (10 + 3) * 2 ** 2 #output-\u003e 56 ","date":"25-01-2024","objectID":"/python/:0:12","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Math function x= 2.9 print(round(x)) #output-\u003e 3 print(abs(-2.9)) # output-\u003e 2.9 (absolut function) import math # \u003c--math module in python print(math.ceil(2.9)) # output-\u003e 3 print(math.floor(2.9)) # output-\u003e 2 ","date":"25-01-2024","objectID":"/python/:0:13","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"If and else if statement is_hot = True is_cold = False if is_hot: print(\"It's a hot day\") print(\"drink plenty of water\") elif is_cold: print(\"its a cold day\") print(\"wear warm cloth\") else: print(\"its a lovely day\") output It,s a hot day drink plenty of water ","date":"25-01-2024","objectID":"/python/:0:14","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Task price = 1000000 has_good_credit = True if has_good_credit: down_payment = 0.1 * price else: down_payment = 0.2 * price print(f\"Down Payment: {down_payment}\") output 100000 ","date":"25-01-2024","objectID":"/python/:0:15","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Logical opoerators ","date":"25-01-2024","objectID":"/python/:0:16","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Task has_high_income = True has_good_credit = True if has_high_income and has_good_credit: # and operator both condition should be true print(\"Eligible for loan\") else: print(\"not eligible for loan\") # output-\u003e Eligible for loan has_high_income = True has_good_credit = False if has_high_income or has_good_credit: # or operator print(\"Eligible for loan\") else: print(\"not eligible for loan\") # output-\u003e Eligible for loan has_good_credit = True has_criminal_record = False if has_good_credit and not has_criminal_record: # not operator print(\"Eligible for loan\") else: print(\"not eligible for loan\") output Eligible for loan ","date":"25-01-2024","objectID":"/python/:0:17","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Comparision operator , \u003c , \u003e= , \u003c= , == , != ","date":"25-01-2024","objectID":"/python/:0:18","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Task temperature = 30 if temperature \u003e= 30: print(\"it's a hot day\") elif temperature \u003c 30: print(\"it's a cold day\") output it's a hot day ","date":"25-01-2024","objectID":"/python/:0:19","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Task name = input(\"enter name: \") if len(name) \u003c 3: print(\"name should be greater than 3.\") elif len(name) \u003e 30: print(\"should be less than 30 characters.\") else: print('looks good.') ","date":"25-01-2024","objectID":"/python/:0:20","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"While loops i = 1 while i \u003c= 5: print('*' * i) i= i +1 print('Done') output * ** *** **** ***** Done ","date":"25-01-2024","objectID":"/python/:0:21","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Task: Guess number secreat_number = 9 guess_count = 0 guess_limit = 3 while guess_count \u003c guess_limit: guess = int(input('Guess: ')) guess_count += 1 if guess == secreat_number: print('you are right.') break else: print('sorry you failed') ","date":"25-01-2024","objectID":"/python/:0:22","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Task: Car game command = \" \" started = False while True: command = input(\"\u003e \").lower() if command == \"start\": if started: print(\"Car is already started!\") else: started = True print(\"Car started...\") elif command == \"stop\": if not started: print(\"Car is already stopped!\") else: print(\"Car stopped.\") started = False elif command == \"quit\": break elif command == \"help\": print(\"\"\" start - to start the car stop - to stop the car quit - to quit \"\"\") else: print(\"Sorry, I don't understand that.\") ","date":"25-01-2024","objectID":"/python/:0:23","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"For loop for item in 'python': print(item) for item in ['balram','sumit', 'prateek', 'shams']: print(item) for item in [1,2,3,4]: print(item) for item in range(10): # range-\u003e builtin fun print(item) # output-\u003e 0 to 9 for item in range(5,10): print(item) # output-\u003e 5 to 9 for item in range(5,10,2): print(item) # output-\u003e 5,7,9 ","date":"25-01-2024","objectID":"/python/:0:24","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Task prices = [10,20,30] total = 0 for price in prices: total = total + price print(f\"Total: {total}\") # output-\u003e 60 ","date":"25-01-2024","objectID":"/python/:0:25","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Nested loop adding one loop in the another loop for x in range(4): for y in range(3): print(f'({x},{y})') ","date":"25-01-2024","objectID":"/python/:0:26","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Task numbers = [5,2,5,2,2] # method 1 for x_count in numbers: print('x' * x_count) # method 2 for x_count in numbers: output = '' for count in range(x_count): output += 'x' print(output) output xxxxx xx xxxxx xx xx xxxxx xx xxxxx xx xx ","date":"25-01-2024","objectID":"/python/:0:27","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Lists names = ['arjun', 'kaishar', 'saif', 'prateek', 'sumit'] print(names) # output-\u003e ['arjun', 'kaishar', 'saif', 'prateek', 'sumit'] print(names[2]) # output-\u003e saif print(names[-1]) # output-\u003e sumit print(names[2:]) # output-\u003e ['saif', 'prateek', 'sumit'] print(names[2:4]) # output-\u003e ['saif', 'prateek'] ","date":"25-01-2024","objectID":"/python/:0:28","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Task: Largest no find the largest number in the list numbers = [2,3,6,7,4,9,10] max = numbers[0] for item in numbers: if item \u003e max: max = item print(max) # output-\u003e 10 ","date":"25-01-2024","objectID":"/python/:0:29","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"2D lists matrix = [ [1,2,3], [4,5,6], [7,8,9] ] print(matrix[0][1]) # output-\u003e 2 matrix[0][1] = 20 print(matrix[0][1]) # output-\u003e 20 for row in matrix: for item in row: print(item) # output-\u003e 1 to 9 in seperate line ","date":"25-01-2024","objectID":"/python/:0:30","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"List methods numbers = [5,2,1,7,4] numbers.append(20) print(numbers) # output-\u003e [5,2,1,7,4,20] numbers.insert(0, 10) print(numbers) # output-\u003e [10,5,2,1,7,4,20] numbers.remove(5) print(numbers) # output-\u003e [10,2,1,7,4,20] numbers.clear() print(numbers) # output-\u003e [] numbers = [5,2,1,7,4] numbers.pop() # output-\u003e [5, 2, 1, 7] print(numbers) numbers = [5,2,1,7,4] print(numbers.index(5)) # output-\u003e 0 # print(numbers.index(50)) # output-\u003e 50 is not in the list print(50 in numbers) # output-\u003e False numbers = [5, 2, 1, 5, 7, 4] print(numbers.count(5)) # output-\u003e 2 numbers.sort() print(numbers) # output-\u003e [1, 2, 4, 5, 5, 7] numbers.reverse() print(numbers) # output-\u003e [7, 5, 5, 4, 2, 1] numbers2 = numbers.copy() numbers.append(10) print(numbers) # output-\u003e [7, 5, 5, 4, 2, 1, 10] print(numbers2) # output-\u003e [7, 5, 5, 4, 2, 1] ","date":"25-01-2024","objectID":"/python/:0:31","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Task: Remove duplicates write a program to remove the duplicates in a list. numbers = [2, 2, 4, 6, 3, 4, 6, 1] uniques = [] for number in numbers: if number not in uniques: uniques.append(number) print(uniques) # output-\u003e [2, 4, 6, 3, 1] ","date":"25-01-2024","objectID":"/python/:0:32","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Tuples similar to list. we dont have append or insert method here. we also dont have remove, clear, pop. we have count, index numbers = (1,2,3) # cant be modified print(numbers[0]) # output-\u003e 1 number[0] = 10 # output-\u003e error message ","date":"25-01-2024","objectID":"/python/:0:33","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Unpacking coordinates = (1,2,3) x = coordinates[0] y = coordinates[1] z = coordinates[2] x, y, z = coordinates print(x) # output-\u003e 1 print(y) # output-\u003e 2 print(z) # output-\u003e 3 ","date":"25-01-2024","objectID":"/python/:0:34","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Dictionaries customer = { \"name\": \"sumit kr\", \"age\": 30, \"is_verified\": True } print(customer[\"name\"]) # output-\u003e sumit kr customer[\"name\"] = \"Sumit\" print(customer[\"name\"]) # output-\u003e Sumit customer[\"birthdate\"] = jan 1 2002 print(customer[\"birthdate\"]) # output-\u003e jan 1 2002 ","date":"25-01-2024","objectID":"/python/:0:35","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Task: Digits to word translate digits to words phone = input(\"Phone: \") digits_mapping = { \"1\": \"One\", \"2\": \"Two\", \"3\": \"Three\", \"4\": \"Four\", \"5\": \"Five\", \"6\": \"Six\", \"7\": \"Seven\", \"8\": \"Eight\", \"9\": \"Nine\", \"0\": \"Zero\" } output = \"\" for ch in phone: output += digits_mapping.get(ch, \"!\") + \" \" print(output) output \u003ePhone: 123456 One Two Three Four Five Six ","date":"25-01-2024","objectID":"/python/:0:36","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":"Emoji Converter :) message = input(\"\u003e\") words = message.split(' ') emojis = { \":)\": \" \" \":(\": \" \" } To be continued….. ","date":"25-01-2024","objectID":"/python/:0:37","tags":["python"],"title":"Python Basic Syntax","uri":"/python/"},{"categories":["DSA"],"content":" Note Use the table of contents to navigate to the portion that you are interested in. ","date":"15-02-2023","objectID":"/oops/:0:0","tags":["C","C++"],"title":"Oops(object oriented programming)","uri":"/oops/"},{"categories":["DSA"],"content":"Introduction Object-oriented-programing(oops) is it inc the readability, extansability, managability of the code. ","date":"15-02-2023","objectID":"/oops/:1:0","tags":["C","C++"],"title":"Oops(object oriented programming)","uri":"/oops/"},{"categories":["DSA"],"content":"Class it is user defined data type just like int char or other datatypes. it contains the properties of a class or we can say data members. we can access datamembers by using “.” operator. class can be created as follows: class Hero { //properties public: int health; char level; } ","date":"15-02-2023","objectID":"/oops/:1:1","tags":["C","C++"],"title":"Oops(object oriented programming)","uri":"/oops/"},{"categories":["DSA"],"content":"object it is an instance of class just like variable if we create an object with empty class then it takes i byte of memory class test{ }; ","date":"15-02-2023","objectID":"/oops/:2:0","tags":["C","C++"],"title":"Oops(object oriented programming)","uri":"/oops/"},{"categories":["DSA"],"content":"Inheritance create new class from existing class. new class inherits the features of base or parent class and have additional features of its own. Syntax: class child_class: access_modifier parent_class{ // body of the child class }; access modifier public private protected ","date":"15-02-2023","objectID":"/oops/:3:0","tags":["C","C++"],"title":"Oops(object oriented programming)","uri":"/oops/"},{"categories":["DSA"],"content":"Most useful git commands. intro Here i summarises the all git commands which is used frequently. It helps developers manage and track changes in their projects. # Initializes a new Git repository in the current directory. git init # To configure the the email id in local git repo. git config --global user.email \"your_email_id\" # To configure the username in the local git repo. git config --global user.name \"your-user-name\" # To check the user email in git local repo. git config --global user.email # Adds a file or directory to the staging area, preparing it to be committed. git add . # to commmit all the changes. git commit -m \"commit_message\" # Uploads local repository changes to the remote repository. git push -u origin main echo \"# test\" \u003e\u003e README.md git add README.md git branch -M main git remote add origin https://github.com/sumit2011/test.git git clone \u003crepo_link\u003e git add \u003cfile_name\u003e git status git config git pull git config # To show the details of the commits. git log git remote -v ","date":"29-02-2024","objectID":"/git-commands/:0:0","tags":["python"],"title":"git commands","uri":"/git-commands/"},{"categories":null,"content":"About me","date":"07-01-2023","objectID":"/about/","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"Hii, my name is Sumit Kumar, i am currently pursuing B.Tech at NIT Srinagar. I’m interested in cybersecurity and competitive programming and love to solve problems. I’m also a part of z3r0d4y(a cybersecurity club at NIT Srinagar). I have the following qualities: I’m curious to learn new things. I’m loyal to my family and friends. Resume ","date":"07-01-2023","objectID":"/about/:0:0","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"Skills ","date":"07-01-2023","objectID":"/about/:1:0","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"Cybersecurity To be honest I’m just a beginner at this stage and interested to learn all about hacking. I’m currently learning hacking from the following platforms. Platform: THM , HTB , Hacker-X. THM Certificates THM Badges THM Pwned Machines Pickle Rick The Simple CTF RootMe Basic Pentesting Other Certificates Tools Sec-Blogs ","date":"07-01-2023","objectID":"/about/:1:1","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"Programming I’m also learning Data Structure and Algorithm, C++, C, Python. Platform: codechef, coding ninja. Languages ","date":"07-01-2023","objectID":"/about/:1:2","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"Projects Deadly Snake T1C-T4K-T0E Binary Calc Sec-Blogs ","date":"07-01-2023","objectID":"/about/:1:3","tags":null,"title":"About me","uri":"/about/"}]